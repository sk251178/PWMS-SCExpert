<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICD/AAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAABMLAAATCwAAAAAAAAAA
        AAAAAAAAAAAAAAEBAQACAgIAAwMDAAQEBAAFBQUABgYGAAcHBwAICAgACQkJAAoKCgALCwsADAwMAA0N
        DQAODg4ADw8PABAQEAAREREAEhISABMTEwAUFBQAFRUVABYWFgAXFxcAGBgYABkZGQAaGhoAGxsbABwc
        HAAdHR0AHh4eACQiIAAxLSQAQzoqAE9DLQBYSi8AYVAxAGdUMgBrVTIAbFQxAG1VMQBtVTIAbVYyAG1X
        MwBtVzMAbVg0AG1YNABtWDUAbVg1AG5YNQBuWDUAblg1AG5YNQBuWDUAblg1AG5YNQBuWDUAb1g1AG9Y
        NQBvWDUAcFg0AHBYNABwWDQAcFg0AHBYNQBwWDUAcFg0AG9YNABvWDUAc1YyAHZWMQB8Vi4AhlcrAI9X
        JwCaWCIAoFggAKZZHgCqWRwAr1obALRbGgC6XBkAvl4ZAMBeGQDBXxkAwmAaAMJgGgDCYBoAw2AaAMNg
        GgDDYBoAxGEaAMRhGwDEYRsAxGIcAMRjHADEYxwAxGQdAMRkHADEYxsAxGMbAMRjGgDEYhkAxGIZAMRi
        GQDDYhkAw2IZAMNiGADDYhgAw2IYAMNiGADDYhgAw2IZAMNiGQDCYhkAwmIZAMJiGQDCYhkAwmIZAMJh
        GQDCYRkAwWEZAMFhGQDAYBoAvmAcALtgHwC4YSMAtGIoALFjLgCvZDEArGY2AKtoOwCpakAApmxFAKZt
        SACmb0oArHFLAK9yTACzdUwAtnZMALp4TAC/eksAwnxMAMR+TQDGf04AxoBPAMaCUgDEglQAwIJXALmA
        WQC0gFsAroBeAKmAYQCjgGUAoYJnAKKDaACihWoAo4hsAKSMbgClkHEApZNzAKaVdACml3UAp5l2AKea
        dwCom3gAqJt4AKiceQConHkAqJ16AKidegCnnXsAp517AKicfAConHwAqpx8AKybfQCwmn4AtJuBALig
        iAC6o40AvqaQAMKplADGrZYAx7KbAMu0ngDMtp8Az7miANC7pgDSvagA07+sANbArQDUwrAA1cSyANXG
        swDUyLYA1My5ANTPuwDT0LwA0tC9ANLQvgDS0L4A0tC+ANLQvQDS0L0A0tC+ANPQvgDU0b8A19HAANrT
        wgDe1cYA39jKAOLb0ADl39UA6eLaAOzl3wDx6uUA9O/rAPfy7wD59fIA+/r3AP38+gD9/fsA/f78AP7+
        /AD+/v0A/v7+AP7+/gD+/v4A/v7+AP7+/gD+/v4A/v7+AP7+/gD+/v4A/v7+AP7+/gD+/v4A/v7+AP7+
        /gD+/v4A/v7+AP7+/gD+/v4A/v7+AP7+/gD+/v4A/f7+AP3+/gD8/v4A+/7+APv+/gD7/v4A+/7+APv+
        /gD8/v4A+Pb2/vb49vb29u/v9vb29vb29vb29vb29vb29vb29vb49u/g9vb29vb2+Pjv9vjh7+/47+/v
        7/b29vb29vb29vj2+vb23vj2/vj29u/24O/29vb29uH27/b29vb29vb27/nSvri5uMLX7+D29u/i4fb2
        7+/4+Pj29vb29vb29vb5uKCvp6evqa+42Pb29vj29vbh9uLv9vb29vb29vb29vaGrq6pqaypqq+p0/bv
        9vb2+fjv9vb2+Pb29vb29vb29oerqa6qr6+pqa+v0/b29u/27/bv9vbv9vb29vb29vbgSaqvr66pqqqu
        rqew2f7279S1tLzX9vb29vb29vb29u+eoa6vp62pqqqpr6/D9vmZLkVFQjyd1OH49vbv7/j29tmHq6+n
        rq+uqq6vqrj40ihBRTItQjlDvO/2+vbg9vb44tmHq6uqr6mvqq6luva+KEVFRkJAMjwyvOL2+Pj39vb6
        9tmYmq2vr6mrr6/V+NlHRUI8REQyQUM51+/2+Pb27/jh9vm+spmfp6+x1fb44rUoPEIxQjpDPDK09uL3
        7/b4+e/59vjh9tW+2O/29t749pwoRS4yPDJCRbT2+Pb29vbh9u/Tt7e30tv2/u/h+Pbi77lIKkJFQjBF
        zvjv7+H27/a1YXJocFxlaJK/9vrv9vbi+Pa1mYeZntD2+Pb29vb2gm9lXGhcZXtcb3CQ1e/29vb27/bv
        7/b4+fb29uL29rZcWGhvXGRXXnBcXHtvv/jv/uL4+O/c2tvv9vb29u/2hHBeZWReaGVccGVwXG9itPb4
        9u/V0sfPzM7U2+Lv4faLeHZcXGhkXHJwZWRkcFxlv+LvuMzMysvPxs7M1d329oRcXGRXZW9baFxke1xc
        ZWVh29W1ys7NzszOz8/P0932slxwe1xoXnBcZGVkXGViXHC3vsvNys/Gys7Mz8vO1PbZTGhceFt4ZXZo
        XnhlcHBwdo7Avs/OzM/KzM/Oz87K9vayUGhoXG9wW154XmhwXGhcXNmcy8/Gzs/OzMrPzsr27++IUXZy
        aHBwb2hcXHBlb3Bo9pnMzszOy8/Oy8rOzvb44eCIU29wXFxeaGhlXFxcXJP22ZrLzs/PzMzPx8/H9vji
        7/iyUGVwcFxcWWRwaFxl0/be2ZnMzc7PzsvPzM/27/b29vbVlk5lcF5leFt6YcTi+vbh2bKwy8zNy87P
        1vbv7+/v9vb52baUjZKSk7/b+Pbi+e/v79m2vrW62Nz29v727/b49vb29vb29u/h9u/27/b27+D29vb2
        9vbv+Pj29vj4+e/44uL29vb5+Pji9vjg+fb+9vb49u/29uL4+Pbv9vb29u/47+/44fb29vjv+Pbv+Pb2
        +Pb29uH2+Pb29gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>